{"version":3,"file":"99.index.js","mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://@apollo/federation-subgraph-compatibility-monorepo/./node_modules/@apollo/server/dist/esm/plugin/landingPage/default/getEmbeddedHTML.js","webpack://@apollo/federation-subgraph-compatibility-monorepo/./node_modules/@apollo/server/dist/esm/plugin/landingPage/default/index.js"],"sourcesContent":["function getConfigStringForHtml(config) {\n    return JSON.stringify(config)\n        .replace('<', '\\\\u003c')\n        .replace('>', '\\\\u003e')\n        .replace('&', '\\\\u0026')\n        .replace(\"'\", '\\\\u0027');\n}\nexport const getEmbeddedExplorerHTML = (version, config) => {\n    const productionLandingPageConfigOrDefault = {\n        displayOptions: {},\n        persistExplorerState: false,\n        ...(typeof config.embed === 'boolean' ? {} : config.embed),\n    };\n    const embeddedExplorerParams = {\n        ...config,\n        target: '#embeddableExplorer',\n        initialState: {\n            ...config,\n            displayOptions: {\n                ...productionLandingPageConfigOrDefault.displayOptions,\n            },\n        },\n        persistExplorerState: productionLandingPageConfigOrDefault.persistExplorerState,\n    };\n    return `\n<div class=\"fallback\">\n  <h1>Welcome to Apollo Server</h1>\n  <p>Apollo Explorer cannot be loaded; it appears that you might be offline.</p>\n</div>\n<style>\n  iframe {\n    background-color: white;\n  }\n</style>\n<div\nstyle=\"width: 100vw; height: 100vh; position: absolute; top: 0;\"\nid=\"embeddableExplorer\"\n></div>\n<script src=\"https://embeddable-explorer.cdn.apollographql.com/${version}/embeddable-explorer.umd.production.min.js\"></script>\n<script>\n  var endpointUrl = window.location.href;\n  var embeddedExplorerConfig = ${getConfigStringForHtml(embeddedExplorerParams)};\n  new window.EmbeddedExplorer({\n    ...embeddedExplorerConfig,\n    endpointUrl,\n  });\n</script>\n`;\n};\nexport const getEmbeddedSandboxHTML = (version, config) => {\n    return `\n<div class=\"fallback\">\n  <h1>Welcome to Apollo Server</h1>\n  <p>Apollo Sandbox cannot be loaded; it appears that you might be offline.</p>\n</div>\n<style>\n  iframe {\n    background-color: white;\n  }\n</style>\n<div\nstyle=\"width: 100vw; height: 100vh; position: absolute; top: 0;\"\nid=\"embeddableSandbox\"\n></div>\n<script src=\"https://embeddable-sandbox.cdn.apollographql.com/${version}/embeddable-sandbox.umd.production.min.js\"></script>\n<script>\n  var initialEndpoint = window.location.href;\n  new window.EmbeddedSandbox({\n    target: '#embeddableSandbox',\n    initialEndpoint,\n    includeCookies: ${config.includeCookies ?? 'false'},\n    initialState: ${getConfigStringForHtml({\n        document: config.document ?? undefined,\n        variables: config.variables ?? undefined,\n        headers: config.headers ?? undefined,\n    })},\n  });\n</script>\n`;\n};\n//# sourceMappingURL=getEmbeddedHTML.js.map","import { getEmbeddedExplorerHTML, getEmbeddedSandboxHTML, } from './getEmbeddedHTML.js';\nexport function ApolloServerPluginLandingPageLocalDefault(options = {}) {\n    const { version, __internal_apolloStudioEnv__, ...rest } = {\n        embed: true,\n        ...options,\n    };\n    return ApolloServerPluginLandingPageDefault(version, {\n        isProd: false,\n        apolloStudioEnv: __internal_apolloStudioEnv__,\n        ...rest,\n    });\n}\nexport function ApolloServerPluginLandingPageProductionDefault(options = {}) {\n    const { version, __internal_apolloStudioEnv__, ...rest } = options;\n    return ApolloServerPluginLandingPageDefault(version, {\n        isProd: true,\n        apolloStudioEnv: __internal_apolloStudioEnv__,\n        ...rest,\n    });\n}\nfunction encodeConfig(config) {\n    return JSON.stringify(encodeURIComponent(JSON.stringify(config)));\n}\nconst getNonEmbeddedLandingPageHTML = (version, config) => {\n    const encodedConfig = encodeConfig(config);\n    return `\n <div class=\"fallback\">\n  <h1>Welcome to Apollo Server</h1>\n  <p>The full landing page cannot be loaded; it appears that you might be offline.</p>\n</div>\n<script>window.landingPage = ${encodedConfig};</script>\n<script src=\"https://apollo-server-landing-page.cdn.apollographql.com/${version}/static/js/main.js\"></script>`;\n};\nfunction ApolloServerPluginLandingPageDefault(maybeVersion, config) {\n    const version = maybeVersion ?? '_latest';\n    return {\n        __internal_installed_implicitly__: false,\n        async serverWillStart() {\n            return {\n                async renderLandingPage() {\n                    const html = `\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <link\n      rel=\"icon\"\n      href=\"https://apollo-server-landing-page.cdn.apollographql.com/${version}/assets/favicon.png\"\n    />\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" />\n    <link\n      href=\"https://fonts.googleapis.com/css2?family=Source+Sans+Pro&display=swap\"\n      rel=\"stylesheet\"\n    />\n    <meta name=\"theme-color\" content=\"#000000\" />\n    <meta name=\"description\" content=\"Apollo server landing page\" />\n    <link\n      rel=\"apple-touch-icon\"\n      href=\"https://apollo-server-landing-page.cdn.apollographql.com/${version}/assets/favicon.png\"\n    />\n    <link\n      rel=\"manifest\"\n      href=\"https://apollo-server-landing-page.cdn.apollographql.com/${version}/manifest.json\"\n    />\n    <title>Apollo Server</title>\n  </head>\n  <body style=\"margin: 0; overflow-x: hidden; overflow-y: hidden\">\n    <noscript>You need to enable JavaScript to run this app.</noscript>\n    <div id=\"react-root\">\n      <style>\n        .fallback {\n          opacity: 0;\n          animation: fadeIn 1s 1s;\n          animation-iteration-count: 1;\n          animation-fill-mode: forwards;\n          padding: 1em;\n        }\n        @keyframes fadeIn {\n          0% {opacity:0;}\n          100% {opacity:1; }\n        }\n      </style>\n    ${config.embed\n                        ? 'graphRef' in config && config.graphRef\n                            ? getEmbeddedExplorerHTML(version, config)\n                            : getEmbeddedSandboxHTML(version, config)\n                        : getNonEmbeddedLandingPageHTML(version, config)}\n    </div>\n  </body>\n</html>\n          `;\n                    return { html };\n                },\n            };\n        },\n    };\n}\n//# sourceMappingURL=index.js.map"],"names":[],"sourceRoot":""}